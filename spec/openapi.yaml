openapi: 3.0.2
info:
  title: Library API
  version: 0.1.1
tags:
  - name: Movies
    description: Operations about the Movies library.
  - name: Books
    description: Operations about the Books library.
  - name: Music
    description: Operations about the Music library.
paths:
  /movies:
    get:
      summary: Get all movies
      description: Retrieves all movies from the library.
      tags:
        - Movies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/movieList'
        '400':
          description: Generic Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      summary: Add a new movie
      description: >-
        Adds a new movie to the library and returns the inserted movie with its
        new ID.
      tags:
        - Movies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                year:
                  type: integer
                  format: int32
                  description: Release Year
                director:
                  type: string
                review:
                  type: string
                valoration:
                  type: string
                  enum:
                    - liked
                    - disliked
                    - none
              required:
                - title
                - year
                - director
              example:
                title: Blade Runner
                year: 1982
                director: Ridley Scott
                review: Memorable movie.
                valoration: liked
        description: Fields of the new movie to be added.
      responses:
        '201':
          description: OK. Returns new movie added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/movie'
        '400':
          description: Movie could not be added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /movies/{movieId}:
    get:
      summary: Get a single movie
      description: Retrieves the movie in the library with the given ID.
      tags:
        - Movies
      parameters:
        - $ref: '#/components/parameters/movieId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/movie'
        '404':
          description: Movie not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    put:
      summary: Update a single movie editables
      description: >-
        Updates the movie's editables (review and/or valoration) in the library
        with the given ID.
      tags:
        - Movies
      parameters:
        - $ref: '#/components/parameters/movieId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                review:
                  type: string
                valoration:
                  type: string
                  enum:
                    - liked
                    - disliked
                    - none
      responses:
        '204':
          description: OK
          content: {}
        '404':
          description: Movie not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      summary: Delete a single movie
      description: Remove the movie in the library with the given ID.
      tags:
        - Movies
      parameters:
        - $ref: '#/components/parameters/movieId'
      responses:
        '204':
          description: OK
          content: {}
        '404':
          description: Movie not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /movies/playlists:
    get:
      summary: Get all movie playlists
      description: Retrieves all movie playlists from the library.
      tags:
        - Movies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/playlistList'
        '400':
          description: Generic Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      summary: Add a new movie playlist
      description: >-
        Adds a new movie playlist to the library and returns the inserted
        playlist with its new ID.
      tags:
        - Movies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
              required:
                - title
              example:
                title: War
        description: Fields of the new playlist to be added.
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/playlist'
        '400':
          description: Generic Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /movies/playlists/{playlistId}:
    put:
      summary: Update a playlist info
      description: Updates the playlist's data in the library with the given ID.
      tags:
        - Movies
      parameters:
        - $ref: '#/components/parameters/playlistId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
      responses:
        '204':
          description: OK
          content: {}
        '404':
          description: Playlist not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      summary: Delete a single playlist
      description: Delete the playlist from the library with the given ID.
      tags:
        - Movies
      parameters:
        - $ref: '#/components/parameters/playlistId'
      responses:
        '204':
          description: OK
          content: {}
        '404':
          description: Playlist not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /movies/playlists/{playlistId}/entries:
    post:
      summary: Add movie to a playlist
      description: Add a new movie to the playlist in the library with the given ID.
      tags:
        - Movies
      parameters:
        - $ref: '#/components/parameters/playlistId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/movie'
      responses:
        '201':
          description: OK
          content: {}
        '404':
          description: Playlist not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      summary: Delete a movie to a playlist
      description: Deletes a movie from the playlist in the library with the given ID.
      tags:
        - Movies
      parameters:
        - $ref: '#/components/parameters/playlistId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/movie'
      responses:
        '204':
          description: OK
          content: {}
        '404':
          description: Playlist not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
components:
  schemas:
    movie:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        year:
          type: integer
          format: int32
          description: Release Year
        director:
          type: string
        review:
          type: string
        valoration:
          type: string
          enum:
            - liked
            - disliked
            - none
      required:
        - id
        - title
        - year
        - director
      example:
        id: 7128353
        title: Blade Runner
        year: 1982
        director: Ridley Scott
        review: Memorable movie.
        valoration: liked
    movieList:
      type: array
      items:
        $ref: '#/components/schemas/movie'
    playlist:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
      required:
        - id
        - title
      example:
        id: 152
        title: War
    playlistList:
      type: array
      items:
        $ref: '#/components/schemas/playlist'
    error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
  parameters:
    movieId:
      name: movieId
      in: path
      description: Movie Id number previously given by the application
      schema:
        type: integer
      required: true
      example: 968523
    playlistId:
      name: playlistId
      in: path
      description: Playlist Id number previously given by the application
      schema:
        type: integer
      required: true
      example: 123
